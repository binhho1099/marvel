// variable
$color-pink: #fc486b;
$color-cyan: #44ffff;
$color-white: #fff;
$height-header: 93px;

@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');
*,
*::after,
*::before {
  box-sizing: inherit;
  padding: 0;
  margin: 0;
}
html {
  font-size: 62.5%;
  line-height: 1.4rem;
  font-family: 'Poppins', sans-serif;
  box-sizing: border-box;
  scroll-behavior: smooth;
  overflow-x: hidden;
}
body {
  font-size: 1.6rem;
  line-height: 1.5;
}
a {
  display: block;
  text-decoration: none;
}
body {
  background-color: #000;
}
img {
  display: inline-block;
}

.hiden {
  display: none !important;
}
.btn-disable {
  filter: brightness(50%);
  transition: all 0.2s linear;

  &:hover {
    filter: brightness(100%);
  }
}

.noscroll {
  width: 100%;
  height: 100vh;
  overflow: hidden;
}

// Line section
.section-line {
  height: 43px;
  width: 100%;
  background-image: url('../img/Assetss/BG3_LINE.jpg');
  position: absolute;
  bottom: 0;

  @include res-xs {
    height: 28px;
  }
}
.section-line--2 {
  height: 43px;
  background: url('../img/Assetss/BG4_LINE.jpg') no-repeat;
  background-size: cover;

  @include res-xs {
    height: 28px;
  }
}

// làm mờ nút nhấn
.disable {
  filter: brightness(50%);
}

@mixin absolute($direction: 'center') {
  position: absolute;
  @if $direction == 'center' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  @if $direction == 'vertical' {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $direction == 'horizontal' {
    left: 50%;
    transform: translateX(-50%);
  }
}

@mixin flex($justify: 'center') {
  display: flex;
  align-items: center;
  @if $justify == 'center' {
    justify-content: center;
  }
  @if $justify == 'between' {
    justify-content: space-between;
  }
  @if $justify == 'around' {
    justify-content: space-around;
  }
}

@mixin lineLimit($n) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $n;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin animationBtnScroll($time) {
  animation: btn $time infinite;
}

.grid {
  display: block;
  padding: 0;
  max-width: 1200px;
  margin: 0 auto;

  @include res-xl {
    max-width: 1140px;
  }
  @include res-lg {
    max-width: 960px;
  }
  @include res-md {
    max-width: 720px;
  }
  @include res-sm {
    max-width: 100%;
  }
  @include res-xs {
    max-width: 100%;
  }
}

// ANIMATION
@keyframes showCar {
  from {
    transform: translate3d(100px, -62px, -135px);
    opacity: 0.5;
  }
  to {
    transform: translate3d(0);
    opacity: 1;
  }
}

@keyframes car {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(1px);
  }
}

@keyframes btn {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translate(0);
    opacity: 1;
  }
}

@keyframes zoomplay {
  0%,
  100% {
    width: 50%;
  }
  50% {
    width: 60%;
  }
}

@keyframes zoom {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.1);
  }
}

@keyframes flicker {
  0%,
  100% {
    filter: brightness(100%);
  }
  50% {
    filter: brightness(150%);
  }
}
@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
@keyframes fadeOut {
  100% {
    opacity: 0;
  }
}

.fade-out {
  animation: fadeOut 0.5s linear forwards;
}
